fun squareComplex(z)
{
	float2(
		z.x * z.x - z.y * z.y,
		z.x * z.y + z.y * z.x
	)
}
fun squareLength(a) {
	a.x * a.x + a.y * a.y
}
let maxSteps = 20;
let o = uv();
let p = float2(-2.5 + (1.0 - (-2.5)) * o.x, -1.7 + (1.7 - (-1.7)) * o.y);
let z = p / (mod(time().y, 20.0) / 3.0);
let steps = 0;
let i = 0;
while (i < maxSteps)
{
    if (squareLength(z) < 4.0)
    { 
        z = squareComplex(z) + p;
        steps++;
    }
    i++;
}
if (steps == maxSteps)
{
    float4(1.0, 0.0, 0.0, 1.0)
}
else
{
    float4(steps / 15.0, 0.0, 0.0, steps / 15.0)
}